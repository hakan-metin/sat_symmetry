#!/bin/bash
set -u

function check_exist_or_die {
    [ -e "$1" ] || { echo "file not exist: $1"; exit 1; }
}

if [[ $# -lt 3 ]]
then
    echo "Usage: $0 SOLVER CNF TIMEOUT SOLVER_OPTIONS" >&2
    exit 1
fi

SOLVER="$1";  shift
CNF="$1";     shift
TIMEOUT="$1"; shift
OPTIONS="$@"

RUNNER="third_party/runsolver"

# Some check
check_exist_or_die "$RUNNER"
check_exist_or_die "$SOLVER"
check_exist_or_die "$CNF"

CNF_FILE=$(basename "$CNF")
SOLVER_FILE=$(basename "$SOLVER")

RESULTS="results"
mkdir -p $RESULTS

BASE="$RESULTS/$SOLVER_FILE-$CNF_FILE"
VAR_FILE="$BASE.var"
OUT_FILE="$BASE.out"

CMD="\"$SOLVER\" \"$CNF\" $OPTIONS"

export LC_NUMERIC=C

ID="$SOLVER_FILE $CNF_FILE"

printf '\e[0;32m%-6s\e[m %s\n' '[ RUN      ]' "$ID"
$RUNNER -w /dev/null -v "$VAR_FILE" -W $TIMEOUT -o "$OUT_FILE" sh -c "$CMD"

source $VAR_FILE
if [[ $TIMEOUT == "true" ]]
then
    ANSWER="TIMEOUT"
    printf '\e[0;33m%-6s\e[m %s (%.2f s)\n' '[  TIMEOUT ]' "$ID" $WCTIME
else
    ANSWER=$(grep -o -R "^s [A-Z]*$" "$OUT_FILE" | cut -d' ' -f2)
    if [[ $ANSWER == "UNSATISFIABLE" ]]; then
        printf '\e[0;32m%-6s\e[m %s (%.2f s)\n' '[    UNSAT ]' "$ID" $WCTIME
    elif [[ $ANSWER == "SATISFIABLE" ]]; then
        # Check Solution
        CHECK=$(third_party/SAT "$CNF" "$OUT_FILE" | tail -n1)
        if [[ $CHECK -eq 11 ]]; then
            printf '\e[0;32m%-6s\e[m %s (%.2f s)\n' '[      SAT ]' "$ID" $WCTIME
        else
            printf '\e[0;31m%-6s\e[m %s (%.2f s)\n' '[       KO ]' "$ID" $WCTIME
        fi
    else
        ANSWER="UNKNONW"
        printf '\e[0;36m%-6s\e[m %s (%.2f s)\n' '[  UNKNOWN ]' "$ID" $WCTIME
    fi
fi
echo "#Result by solver\nRESULT=$ANSWER" >> $VAR_FILE
